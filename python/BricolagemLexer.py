# Generated from BricolagemLexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,29,310,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
        1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,
        1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,
        1,23,1,23,1,24,1,24,1,25,5,25,278,8,25,10,25,12,25,281,9,25,1,25,
        1,25,5,25,285,8,25,10,25,12,25,288,9,25,1,26,4,26,291,8,26,11,26,
        12,26,292,1,27,1,27,5,27,297,8,27,10,27,12,27,300,9,27,1,27,1,27,
        1,28,4,28,305,8,28,11,28,12,28,306,1,28,1,28,1,298,0,29,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
        15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
        26,53,27,55,28,57,29,1,0,27,2,0,80,80,112,112,2,0,82,82,114,114,
        2,0,79,79,111,111,2,0,74,74,106,106,2,0,69,69,101,101,2,0,84,84,
        116,116,2,0,77,77,109,109,2,0,65,65,97,97,2,0,75,75,107,107,2,0,
        78,78,110,110,2,0,73,73,105,105,2,0,86,86,118,118,2,0,76,76,108,
        108,2,0,66,66,98,98,2,0,83,83,115,115,2,0,68,68,100,100,2,0,90,90,
        122,122,2,0,71,71,103,103,2,0,81,81,113,113,2,0,85,85,117,117,2,
        0,67,67,99,99,2,0,70,70,102,102,3,0,65,90,95,95,97,122,1,0,46,46,
        4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,32,314,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,1,59,1,0,0,0,3,72,
        1,0,0,0,5,78,1,0,0,0,7,83,1,0,0,0,9,98,1,0,0,0,11,119,1,0,0,0,13,
        136,1,0,0,0,15,156,1,0,0,0,17,167,1,0,0,0,19,177,1,0,0,0,21,186,
        1,0,0,0,23,203,1,0,0,0,25,213,1,0,0,0,27,228,1,0,0,0,29,235,1,0,
        0,0,31,245,1,0,0,0,33,258,1,0,0,0,35,260,1,0,0,0,37,262,1,0,0,0,
        39,264,1,0,0,0,41,266,1,0,0,0,43,268,1,0,0,0,45,270,1,0,0,0,47,272,
        1,0,0,0,49,274,1,0,0,0,51,279,1,0,0,0,53,290,1,0,0,0,55,294,1,0,
        0,0,57,304,1,0,0,0,59,60,7,0,0,0,60,61,7,1,0,0,61,62,7,2,0,0,62,
        63,7,3,0,0,63,64,7,4,0,0,64,65,7,5,0,0,65,66,7,2,0,0,66,67,7,6,0,
        0,67,68,7,7,0,0,68,69,7,8,0,0,69,70,7,4,0,0,70,71,7,1,0,0,71,2,1,
        0,0,0,72,73,7,9,0,0,73,74,7,10,0,0,74,75,7,11,0,0,75,76,7,4,0,0,
        76,77,7,12,0,0,77,4,1,0,0,0,78,79,7,5,0,0,79,80,7,4,0,0,80,81,7,
        6,0,0,81,82,7,7,0,0,82,6,1,0,0,0,83,84,7,2,0,0,84,85,7,13,0,0,85,
        86,7,3,0,0,86,87,7,4,0,0,87,88,7,5,0,0,88,89,7,10,0,0,89,90,7,11,
        0,0,90,91,7,2,0,0,91,92,7,4,0,0,92,93,7,9,0,0,93,94,7,14,0,0,94,
        95,7,10,0,0,95,96,7,9,0,0,96,97,7,2,0,0,97,8,1,0,0,0,98,99,7,2,0,
        0,99,100,7,13,0,0,100,101,7,3,0,0,101,102,7,4,0,0,102,103,7,5,0,
        0,103,104,7,10,0,0,104,105,7,11,0,0,105,106,7,2,0,0,106,107,7,7,
        0,0,107,108,7,0,0,0,108,109,7,1,0,0,109,110,7,4,0,0,110,111,7,9,
        0,0,111,112,7,15,0,0,112,113,7,10,0,0,113,114,7,16,0,0,114,115,7,
        7,0,0,115,116,7,17,0,0,116,117,7,4,0,0,117,118,7,6,0,0,118,10,1,
        0,0,0,119,120,7,2,0,0,120,121,7,13,0,0,121,122,7,3,0,0,122,123,7,
        4,0,0,123,124,7,5,0,0,124,125,7,10,0,0,125,126,7,11,0,0,126,127,
        7,2,0,0,127,128,7,0,0,0,128,129,7,4,0,0,129,130,7,14,0,0,130,131,
        7,18,0,0,131,132,7,19,0,0,132,133,7,10,0,0,133,134,7,14,0,0,134,
        135,7,7,0,0,135,12,1,0,0,0,136,137,7,2,0,0,137,138,7,13,0,0,138,
        139,7,3,0,0,139,140,7,4,0,0,140,141,7,5,0,0,141,142,7,10,0,0,142,
        143,7,11,0,0,143,144,7,2,0,0,144,145,7,4,0,0,145,146,7,15,0,0,146,
        147,7,19,0,0,147,148,7,20,0,0,148,149,7,7,0,0,149,150,7,20,0,0,150,
        151,7,10,0,0,151,152,7,2,0,0,152,153,7,9,0,0,153,154,7,7,0,0,154,
        155,7,12,0,0,155,14,1,0,0,0,156,157,7,7,0,0,157,158,7,5,0,0,158,
        159,7,10,0,0,159,160,7,11,0,0,160,161,7,10,0,0,161,162,7,15,0,0,
        162,163,7,7,0,0,163,164,7,15,0,0,164,165,7,4,0,0,165,166,7,14,0,
        0,166,16,1,0,0,0,167,168,7,7,0,0,168,169,7,11,0,0,169,170,7,7,0,
        0,170,171,7,12,0,0,171,172,7,10,0,0,172,173,7,7,0,0,173,174,7,20,
        0,0,174,175,7,7,0,0,175,176,7,2,0,0,176,18,1,0,0,0,177,178,7,1,0,
        0,178,179,7,4,0,0,179,180,7,20,0,0,180,181,7,19,0,0,181,182,7,1,
        0,0,182,183,7,14,0,0,183,184,7,2,0,0,184,185,7,14,0,0,185,20,1,0,
        0,0,186,187,7,20,0,0,187,188,7,2,0,0,188,189,7,9,0,0,189,190,7,21,
        0,0,190,191,7,2,0,0,191,192,7,1,0,0,192,193,7,6,0,0,193,194,7,10,
        0,0,194,195,7,15,0,0,195,196,7,7,0,0,196,197,7,15,0,0,197,198,7,
        4,0,0,198,199,7,13,0,0,199,200,7,9,0,0,200,201,7,20,0,0,201,202,
        7,20,0,0,202,22,1,0,0,0,203,204,7,15,0,0,204,205,7,4,0,0,205,206,
        7,14,0,0,206,207,7,20,0,0,207,208,7,1,0,0,208,209,7,10,0,0,209,210,
        7,20,0,0,210,211,7,7,0,0,211,212,7,2,0,0,212,24,1,0,0,0,213,214,
        7,15,0,0,214,215,7,19,0,0,215,216,7,1,0,0,216,217,7,7,0,0,217,218,
        7,20,0,0,218,219,7,7,0,0,219,220,7,2,0,0,220,221,7,6,0,0,221,222,
        7,10,0,0,222,223,7,9,0,0,223,224,7,19,0,0,224,225,7,5,0,0,225,226,
        7,2,0,0,226,227,7,14,0,0,227,26,1,0,0,0,228,229,7,0,0,0,229,230,
        7,7,0,0,230,231,7,14,0,0,231,232,7,14,0,0,232,233,7,2,0,0,233,234,
        7,14,0,0,234,28,1,0,0,0,235,236,7,20,0,0,236,237,7,1,0,0,237,238,
        7,10,0,0,238,239,7,5,0,0,239,240,7,4,0,0,240,241,7,1,0,0,241,242,
        7,10,0,0,242,243,7,2,0,0,243,244,7,14,0,0,244,30,1,0,0,0,245,246,
        7,10,0,0,246,247,7,9,0,0,247,248,7,14,0,0,248,249,7,5,0,0,249,250,
        7,1,0,0,250,251,7,19,0,0,251,252,7,6,0,0,252,253,7,4,0,0,253,254,
        7,9,0,0,254,255,7,5,0,0,255,256,7,2,0,0,256,257,7,14,0,0,257,32,
        1,0,0,0,258,259,5,123,0,0,259,34,1,0,0,0,260,261,5,125,0,0,261,36,
        1,0,0,0,262,263,5,40,0,0,263,38,1,0,0,0,264,265,5,41,0,0,265,40,
        1,0,0,0,266,267,5,91,0,0,267,42,1,0,0,0,268,269,5,93,0,0,269,44,
        1,0,0,0,270,271,5,58,0,0,271,46,1,0,0,0,272,273,5,44,0,0,273,48,
        1,0,0,0,274,275,5,59,0,0,275,50,1,0,0,0,276,278,7,22,0,0,277,276,
        1,0,0,0,278,281,1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,282,
        1,0,0,0,281,279,1,0,0,0,282,286,7,23,0,0,283,285,7,24,0,0,284,283,
        1,0,0,0,285,288,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,52,1,
        0,0,0,288,286,1,0,0,0,289,291,7,25,0,0,290,289,1,0,0,0,291,292,1,
        0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,54,1,0,0,0,294,298,5,34,
        0,0,295,297,9,0,0,0,296,295,1,0,0,0,297,300,1,0,0,0,298,299,1,0,
        0,0,298,296,1,0,0,0,299,301,1,0,0,0,300,298,1,0,0,0,301,302,5,34,
        0,0,302,56,1,0,0,0,303,305,7,26,0,0,304,303,1,0,0,0,305,306,1,0,
        0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,308,1,0,0,0,308,309,6,28,
        0,0,309,58,1,0,0,0,6,0,279,286,292,298,306,1,6,0,0
    ]

class BricolagemLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PROJETO_MAKER = 1
    NIVEL = 2
    TEMA = 3
    OBJETIVO_ENSINO = 4
    OBJETIVO_APRENDIZAGEM = 5
    OBJETIVO_PESQUISA = 6
    OBJETIVO_EDUCACIONAL = 7
    ATIVIDADES = 8
    AVALIACAO = 9
    RECURSOS = 10
    CONFORMIDADE_BNCC = 11
    DESCRICAO = 12
    DURACAOMINUTOS = 13
    PASSOS = 14
    CRITERIOS = 15
    INSTRUMENTOS = 16
    ABRE_CHAVE = 17
    FECHA_CHAVE = 18
    ABRE_PARENTESE = 19
    FECHA_PARENTESE = 20
    ABRE_COLCHETE = 21
    FECHA_COLCHETE = 22
    DOIS_PONTOS = 23
    VIRGULA = 24
    PONTO_VIRGULA = 25
    ID = 26
    NUMERO = 27
    STRING = 28
    WS = 29

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'ProjetoMaker'", "'Nivel'", "'Tema'", "'ObjetivoEnsino'", "'ObjetivoAprendizagem'", 
            "'ObjetivoPesquisa'", "'ObjetivoEducacional'", "'Atividades'", 
            "'Avaliacao'", "'Recursos'", "'ConformidadeBNCC'", "'Descricao'", 
            "'DuracaoMinutos'", "'Passos'", "'Criterios'", "'Instrumentos'", 
            "'{'", "'}'", "'('", "')'", "'['", "']'", "':'", "','", "';'" ]

    symbolicNames = [ "<INVALID>",
            "PROJETO_MAKER", "NIVEL", "TEMA", "OBJETIVO_ENSINO", "OBJETIVO_APRENDIZAGEM", 
            "OBJETIVO_PESQUISA", "OBJETIVO_EDUCACIONAL", "ATIVIDADES", "AVALIACAO", 
            "RECURSOS", "CONFORMIDADE_BNCC", "DESCRICAO", "DURACAOMINUTOS", 
            "PASSOS", "CRITERIOS", "INSTRUMENTOS", "ABRE_CHAVE", "FECHA_CHAVE", 
            "ABRE_PARENTESE", "FECHA_PARENTESE", "ABRE_COLCHETE", "FECHA_COLCHETE", 
            "DOIS_PONTOS", "VIRGULA", "PONTO_VIRGULA", "ID", "NUMERO", "STRING", 
            "WS" ]

    ruleNames = [ "PROJETO_MAKER", "NIVEL", "TEMA", "OBJETIVO_ENSINO", "OBJETIVO_APRENDIZAGEM", 
                  "OBJETIVO_PESQUISA", "OBJETIVO_EDUCACIONAL", "ATIVIDADES", 
                  "AVALIACAO", "RECURSOS", "CONFORMIDADE_BNCC", "DESCRICAO", 
                  "DURACAOMINUTOS", "PASSOS", "CRITERIOS", "INSTRUMENTOS", 
                  "ABRE_CHAVE", "FECHA_CHAVE", "ABRE_PARENTESE", "FECHA_PARENTESE", 
                  "ABRE_COLCHETE", "FECHA_COLCHETE", "DOIS_PONTOS", "VIRGULA", 
                  "PONTO_VIRGULA", "ID", "NUMERO", "STRING", "WS" ]

    grammarFileName = "BricolagemLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


